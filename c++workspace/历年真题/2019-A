一、简答题
1.简述程序设计开发过程的一般步骤
答：程序设计开发的步骤如下：
  (1)、分析问题，
  (2)、设计算法
  (3)、将算法进行编译成可执行的代码
  (4)、对代码进行测试试调，看其是否符合要求。
  (5)、编写说明文档。
订正：
   总共5个步骤：
       1.问题分析
       2.设计算法
       3.编写程序
       4.对源程序进行编辑,编译和连接
       5.运行程序分析结果
       6.编写程序文档
2.简述全局变量，局部变量和全局静态变量的概念，作用域和生命周期
答：全局变量：定义在函数之外的变量，其作用域为定义该变量的位置到文件尾均可使用该变量，生命周期，变量会一直存在。
局部变量：定义在函数内部的变量，其作用域仅限本代码块，生命周期会随着函数调用结束个释放、
全局静态变量:定义在函数外，且使用static关键字修饰，其作用域仅限本文件，生命周期会一直存在，且每次调用该变量时，它的值取上次最后调用该变量的值

订正：
   全局变量：在函数之外定义的变量，可以为本文件的其他函数所共用，其生命周期和作用域为定义变量的位置开始到本源文件的结束，
   局部变量：在函数内部定义的变量只在本函数范围内才能被引用，作用域和生命周期都只限于本函数内
   全局静态变量：即使用关键字static定义的外部变量，其作用域只限于本文件使用。
3.简述在c语言中使用指针的优缺点。
答：优点：(1)指针无所不在，整个c所有的都可以使用指针
订正：
  优点：
    (1).提高程序效率
    (2).在调用函数时当指针指向的变量的值改变时，这些值都能够为主调函数使用，即可以从函数调用得到多个可改变的值
    (3).可以实现动态存储分配。
  缺点：
    (1).指针太过于灵活，十分容易出错，而且错误都比较隐蔽，初学者一般很难发现
    (2).指针变量的错误可能会导致整个程序的破坏，且比较难以发现和排除故障。
二、程序阅读题
1.
#include<stdio.h>
void main(){
  int s=0,k;
  for(k=7;k>=4;k--){
    switch(k){
      case 1:
      case 4:
      case 7:s++,break;
      case 2:
      case 3:
      case 6:break;
      case 0:
      case 5:s=s+2;
    }
  }
  printf("s=%d\n",s);
}
程序输出为：s=4
2.
#include<stdio.h>
void main(){
  int i,num=0;
  for(i=0;i<30;i++){
    if(i !=0 && i%3 == 0 )
      continue;
    num=num+2;
  }
  printf("num=%d\n",num);
  num=0;
  for(i=0;i<30;i++){
    if(i!=0 && i%3==0)
      break;
    num=num+2;
  }
  printf("num=%d\n",num);
}
程序输出： num=40  订正：num=42
          num=6
          
3.    
#include<stdio.h>
struct st{
  int num;
  char name[8];
  int age;
}stu[3]={2031,"Wang",18,2032,"wu",19,2033,"Mu",20};
void f(struct st *p){
  printf("%s\n",(*p).name);
}
void main(){
  f(stu+1);
}
输出：wu   

4.
#include<stdio.h>
int f(int a){
  int b=0;
  static int c=3;
  b=a+c++;
  return b;
}
void main(){
  int a=2,i,k=0;
  for(i=1;i<=2;i++){
    k=f(a++)+k;
    printf("k=%d\n",k);
  }
}
输出：12 订正：k=5
              k=12

5.
#include<stdio.h>
int fan(int n){
  int k;
  if(n==0 || n==1)
    return 3;
  else
    k=n-fan(n-2);
  return k;    
}
void main(){
  printf("f=%d\n",fan(9));
}          
输出：f=7  

三、程序填空题
1.下例程序输出200-300以内的素数。
#include<stdio.h>
#include<math.h>
void main(){
  int i,m,k;
  for(m=201;m<=300;m++){
    k=[1];
    for(i=[2];i<=k;i++)
      if(m%i==0) break;
    if(i>=k+1)
      printf("%d",m);
  }
}
填空：[1]:sqrt(m)  [2]:2
注：素数的判定：每次生成的数能够整除（2—根号自身）的数，即为素数

2.本程序要求给出一个3*4矩阵输入数据，并求其中最大元素
#include<stdio.h>
int max_value([3]){
  int i,j,max;
  max = array[0][0];
  for(i=0;i<3;i++)
    for(j=0;j<4;j++)
      if(array[i][j]>max)
        max=array[i][j];
  [4];
}
void main(){
  int a[3][4],i,j;
  for(i=0;i<3;i++)
    for(j=0;j<4;j++)
      [5];
  printf("max value is %d\n",max_value(a));
}
填空：[3]:int array[][]  [4]:return max  [5]:scanf("%d",&a[i][j]) 订正：[1]:array[][4]
注：数组做函数参数时
一维数组参数：
（1）数组名作函数实参时,向形参（数组名或指针变量）传递的是数组首元素的地址
（2）形参数组可以不指定大小，在数值名后面跟一个空的方括号，在编译时把形参数组名处理为一个指针变量。
二维数组参数：
 与一维类似，可以指定一维和二维的大小，尤其是二维的必须指定其大小

3.下列程序的内容为输出如右图所示的图形
#include<stdio.h>
void main(){
  int i,j;
  char ch='A';
  for(i=1;s<5;i++,[6]){
    for(j=1;[7];j++) printf(" ");
    for(j=1;[8];j++) printf("%c",ch);
    printf("\n");
  }
}
填空 [6]:ch++ [7]:j<[8]:   订正：[7]:j<=5-i  [8]:2*i-1

4、以下程序是将文件f1.txt,中的字符逐个读出并显示在屏幕上。
#include<stdio.h>
void main(){
  FILE *fp;
  char ch;
  fp=fopen[9];
  ch=fgetc(fp);
  while (!feof(fp)){
    putchar(ch);
    ch=[10];
  }
  putchar("\n");
  fclose(fp);
}
填空：[9]:(fp,"r") [10]:fp++  订正：[9]:("f1.txt",'r) [10]:getchar()

四、算法设计题
1.分析下列问题。用传统流程图表示其算法：判断一个数n能否同时被3和5整除。
分析用流程图表示算法。
2.下列流程图表示的问题是：从键盘输入50名学生的成绩，输出80分以上的人数，根据流程图写出对应的程序
#include<stdio.h>
int main(){
  int i=1,n=0;
  int gi[50];
  for(;i<=50;i++){
    scanf("%d",&gi[i]);
    if(gi[i]>=80)
      n=n+1;
  }
  printf("%d",n);
  return 0;
}

五、程序设计题
1.有一函数：y=……，编程求函数值，要求：(1)采用双精度类型，(2)运行结果的格式形式：x=输入值,f(x)=计算值.
#include<stdio.h>
int main(){
  double x,y;
  printf("请输入x的值:\n");
  scanf("%f",&x);         //订正:双精度接收数据使用%lf
  if(x<0 && x!=-4){
    y=2*x*x+3*x-4;
  }else if(x>=0&&x<10 && x!=5){
    y=2*x*x-6*x+5;
  }else{
    y=2*x*x-4*x-1;
  }
  printf("x=%.2f,f(x)=%.2f",x,y);
  return 0;
}

2.编写程序实现，任意输入一个字符串（长度<80）,求该字符串中英文字母的个数（包括大小写字母）
#include<stdio.h>
int main(){
  int i,num=0;
  char str[80];
  printf("请输入字符串");
  gets(str); //注：gets()方法获取字符串  也可以使用scanf("%s",str);
  //遍历每个字符
  for(i=0;str=='\0';i++){   //订正：str[i]!='\0'  
    if(str[i]>'a' && str[i]<'z' || str[i]>'A' && str[i]<'Z'){
      num++;
    }
  }
  printf("英文字母的个数为“%d",num);
  return 0;
}
总结：for循环字符串数组，其中判断条件为最后一个字符'\0' 只要str[i]不等于它就好了。同时也要记住str[i](即为当个字符)

3.编写程序，根据下式求PI的近似值，直到最后一项小于精度eps=0.00001.
#include<stdio.h>
int main(){
  int i,a=1,b=1;
  double sn=1,sum=0,eps;
  eps=a%b
  while(eps<0.00001){
    sn=a/b;
    sum+=sn;
    a++;
    b+=2;
    a*=a;
    b*=b;
  }
  printf("a=%f,b=%f",a,b);
  return 0;
}






















