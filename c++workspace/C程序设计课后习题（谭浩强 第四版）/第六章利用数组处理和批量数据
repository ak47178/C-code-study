一：例题：
例1：对10个数组元素依次赋值为0,1,2,3,4,5,6,7,8,9，要求逆序输出。
#include<stdio.h>
#include<math.h>
int main(){
    int a[10];
    for(int i=0;i<10;i++){
	a[i]=i;
    }
    //逆序输出，可以按照下标从大到小进行输出。
    for(int j=9;j>0;j--){
	printf("a[%d]=%d\n",j,a[j]);
    }
    return 0;
}
例2：用数组来处理fibonacci数列问题。
#include<stdio.h>
#include<math.h>
int main(){
    int i;
    int f[20]={1,1};  		//定义数组，并初始化前两个都为1的数
    for(i=2;i<20;i++){		//使用for循环，对f数组的每个元素进行赋值
	    f[i]=f[i-2]+f[i-1];
    }
    for(i=0;i<20;i++){		//输出f数组，判断i能被5整除就换行。
    if(i%5==0){
        printf("\n");
    }
	  printf("%12d",f[i]);
    }
    return 0;
}
例3:有10个地区的面积，要求对他们按由小到大的顺序排列。
#include<stdio.h>
#include<math.h>
int main(){
    /*
     * 排序是一种重要的基本的算法，排序的方法跟多，本例用“起泡法排序”，也称之为冒泡排序。
     * 	基本思路：每次讲相邻的两个数比较将小的调剂到前头，
     */
    int a[10];
    int i,j,temp;
    printf("请输入10个数：\n");
    //for循环输入10个数
    for(i=0;i<10;i++)
	scanf("%d,",&a[i]);
    //对数组进行排序
    for(i=0;i<9;i++){
    for(j=0;j<9-i;j++){
        if(a[j]>a[j+1]){
      temp=a[j];
      a[j]=a[j+1];
      a[j+1]=temp;
        }
    }
    }
    for(i=0;i<10;i++)
	    printf("%d",a[i]);
    return 0;
}
例4、将一个二维数组行和列的元素互换，存到另一个二维数组中.
#include<stdio.h>
#include<math.h>
int main(){
   int a[2][3]={{1,2,3},{4,5,6}};
   int b[3][2];
   for(int i=0;i<2;i++){
       for(int j=0;j<3;j++){
	   b[j][i]=a[i][j];
       }
   }
   //输出b数组的各项元素
   for(int i=0;i<3;i++){
       for(int j=0;j<2;j++)
	   printf("%d ",b[i][j]);
       printf("\n");
   }
    return 0;
}
例5.有一个3x4的矩阵，要求编程序求出其中最大的那个元素的值以及其所在的行号和列号。
#include<stdio.h>
#include<math.h>
int main(){
    /*
     * 使用打擂台算法，即先设最大值为max=a[0][0],遍历数组，与max进行比较，如果比它大没就互换值，来求出最大猴子。
     */
    int a[3][4]={{6,7,8,9},{2,4,5,6},{1,2,3,4}};
    int max=a[0][0],i,j,col=0,row=0;  // 定义最大值为a[0][0],行row,列col.
    for(i=0;i<3;i++){
	    for(j=0;j<4;j++){
	      if(a[i][j]>a[0][0]){
          max=a[i][j];
          row=i;
          col=j;
	      }
	    }
    }
    printf("最大值为%d,行号%d列号%d",max,row,col);
    return 0;
}
3.应用字符串数组的元素
例6、输出一个已知的字符串。
#include<stdio.h>
#include<math.h>
int main(){
    //注，char类型时如果定义空字符，必须加上空格，''——>' '
    //定义一个字符串
    char a[15] ={'I', ' ', 'a', 'm', ' ', 's', 't', 'u', 'd', 'e', 'n', 't','.'};
    int i;
    //输出字符串
    for(i=0;i<15;i++){
	    printf("%c",a[i]);
    }
    printf("\n");
    return 0;
}
例9：有3个字符串，找出其中的最大者。
#include<stdio.h>
int main(){
    char str[3][20];			// 定义一个 二维数组
    char temp[20];			//定义一个一维数组，用于交换字符的临时字符数组
    int i;
    for(i=0;i<3i++;)
	gets(str[i]);			// 输入3个字符串，分别赋值给str[0],str[1],str[2]
    if(strcmp(str[0],str[1])>0){	//若str[0]大于str[1]
	strcpy(temp,str[0]);		//把str[0]的字符串赋值给字符数组temp（临时存放）
    }else{				//str[0]<str[1]
	strcpy(temp,str[1]);		//把str[1]的字符串赋值给字符数组temp（临时存放）
    }
    if(strcmp(str[2],temp)>0){		//str[2]与temp比较
	strcpy(temp,str[2]);		//大于就把str[2]的字符串赋值给字符数组temp（临时存放）
    }
    printf("字符串的最大值是%s",temp);
    return 0;
}
二、课后习题
1.用筛选法求100之内的素数。
#include<stdio.h>
int main(){
    /*
     * 方法：在一张上写1到100的全部整数，然后逐个判断它们是否是素数，找出一个非素数，就把他吃掉，最后剩下的就是素数。
     * 具体思路：
     * 	  1.先将1挖掉，1不是素数
     * 	  2.用2去除后面的各个数，将能整除2的数挖掉，即能把2的倍数挖掉。
     * 	  3.用3去除他后面的各个数，把3的倍数挖掉，
     * 	  4，。。。。依次类推。
     */
    int i,j,n,a[101];
    // 生成a数组的100个元素
    for(i=1;i<=100;i++){
	a[i]=i;
    }
    //每个数除以1，除2。。然后将这些数都打印出列
    for (i=2;i<sqrt(100);i++)		// i为前的数
        for (j=i+1;j<=100;j++){		//j为二轮循环中的数
            if(a[i]!=0 && a[j]!=0)	// 使用二轮循环的a[j]去整除一轮循环的a[i]
    	      if(a[j]%a[i]==0)		//如果能被整除就设置a[i]=0,即摒弃这个数。
    	        a[j]=0;
           }
    printf("\n");
    for (i=2,n=0;i<=100;i++){		//从2开始遍历，并设定n=0,
	if(a[i]!=0){			//筛选出a[i]不等于0的数
	    printf("%5d",a[i]);		//输出他
             n++;			//n++ 用于下面每10个数换行
            }
          if(n==10){
              printf("\n");
              n=0;
            }
        }
      printf("\n");
    return 0;
}
2.用选择法对10个整数进行排序
#include<stdio.h>
int main(){
    /*
     * 假定一个小的数，然后与之比较，然后进行跟换下标
     */
    int a[10]={1,2,3,5,6,7,4,9,8,12};
    int min,mid;
    for(int i=0;i<10;i++){
	min = i;
	for(int j=i+1;j<10;j++){
	    if(a[min]>a[j]){		//自定义的a[min]与二轮循环的a[j]进行比较，如果大就交换下标
		min=j;			//先进行下标交换
		mid=a[i];		//再交换值
		a[i]=a[j];
		a[j]=mid;
	    }
	}
    }
    // 输出排序之后的结果
    for(int i=0;i<10;i++){
	printf(" %d",a[i]);
    }
    return 0;
}
3.求一个3x3的整型矩阵的对角线元素之和
#include<stdio.h>
int main(){
    /*
     * 先要指定3x3阶的数组
     * 然后筛选出对角元素
     * 求和
     */
    int sum=0;
    int a[3][3]={{1,2,3},{4,5,6},{7,8,9}};
    for(int i=0;i<3;i++){
	sum+=a[i][i];
    }
    printf("%6d\n",sum);
    return 0;
}	













