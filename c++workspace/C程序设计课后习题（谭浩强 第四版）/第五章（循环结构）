一、例题：
例1：求1+2+3+4...+100.
方案一：使用while语句。
#include<stdio.h>
int main(){
    int sum=0;
    int i=1;
    while(i<=100){
	sum+=i;
	i++;
    }
    printf("sum:%d",sum);
    return 0;
}
方案二：使用do...while语句。
#include<stdio.h>
int main(){
    int sum=0;
    int i=1;
    do{
	sum+=i;
	i++;
    }while(i<=100);
    printf("sum:%d",sum);
    return 0;
}
例2：while 和do...while循环的比较。
(1)用while循环：
#include<stdio.h>
int main(){
    int sum=0,i=1;
    printf("please enter i,i=?\n");
    scanf("%d",&i);
    while(i<=10){
	sum+=i;
	i++;
    }
    printf("sum=%d",sum);
    return 0;
}
(2)使用do...while()循环：
#include<stdio.h>
int main(){
    int sum=0,i=1;
    printf("please enter i,i=?\n");
    scanf("%d",&i);
    do{
	sum+=i;
	i++;
    }while(i<=10);
    printf("sum=%d",sum);
    return 0;
}
例4：在全系1000学生中，征集慈善募捐，当总数达到10万元时就就结束，统计此时的捐款人数，以及平均每人的捐款人数。
#include<stdio.h>
#define SUM 100000
int main(){
    float total,amount,aver;
    int i;
    for(i=1,total=0;i<1000;i++){
	printf("please enter your count:");
	scanf("%f",&amount);
	total+=amount;
	if (total>=SUM) break;
    }
    aver = total/i;
    printf("num=%d\n aver=%0.2f\n",i,aver);
    return 0;
}
例5：要求输出100-200之间不能被3整除的数。
#include<stdio.h>
int main(){
    int i;
    for(i=100;i<200;i++){
	if(i%3==0){
	    continue;
	}
	printf("%d\n",i);
    }
    return 0;
}
例6：输出4*5的矩阵。
#include<stdio.h>
int main(){
    int i,j;
    for(i=1;i<=4;i++){
      for(j=1;j<=5;j++){
          printf("%d\t",i*j);
      }
	    printf("\n");
    }
    return 0;
}
#include<stdio.h>
int main(){
    int i,j;
    for(i=1;i<=4;i++){
      for(j=1;j<=5;j++){
          if(i==3&&j==1)break; // 遇到第3行和第1列，终止循环。
          printf("%d\t",i*j);
      }
	  printf("\n");
    }
    return 0;
}
例7：用pi/4=1-1/3+1/5-1/7+....公式求pi的近似值，直到发现每一项的绝对值小于10^6为止。
#include<stdio.h>
#include<math.h>
int main(){
    float pi=0;
    double y=1,tems=1.0;
    int sign=1;
    while(fabs(tems)>=1e-6){  // fabs():返回该数的绝对值。
	pi+=tems;
	y+=2;			//分母每次加二
	sign=-sign;		// 赋值之后再次赋值正好为正数，依次循环
	tems=sign/y;
    }
    pi*=4;
    printf("pi=%10.8f\n",pi);
    return 0;
}
例8：求fibonacci数列的前40个数，这个数列有以下特点，第1,2个数为1，第3个数开始，该数是前面两个数之和。
1.
#include<stdio.h>
#include<math.h>
int main(){
    int num1=1,num2=1,num3=1;
    for(int i=1;i<40;i++){
	if(i>2){
	    num3=num1+num2;
	}
	printf("%d\n",num3);
	num1=num2;
	num2=num3;
    }

    return 0;
}
例9：输入一个大于3的整数n,判定他是否为素数（质数）
#include<stdio.h>
#include<math.h>
int main(){
    /*
     * 只需判断是否能够被2-根号n之间的整数整除即可，
     */
    int n,k,i;
    scanf("%d",&n);
    k=sqrt(n);
    for(i=2;i<=k;i++){
	    if(n%i==0)break;
    }
    if(i<=k)printf("是质数%d",n);
    else printf("不是质数%d",n);
    return 0;
}
例10：求100-200之间的全部素数
#include<stdio.h>
#include<math.h>
int main(){
    int k,n =101,i,m;
    for(;n<=200;n+=2){		// n从100变化到200,对每个n进行判定
	k=sqrt(n);
	for(i=2;i<=k;i++){
	    if(n%i==0)break; 	//如果n被i整除终止内循环，此时i<k+1
	}
	if(i>=k+1){		//若i>=k+1表示n未被整除
	    printf("%d ",n);	//应确定n是素数
	    m=m+1;		//m用来控制换行，一行内输出10个素数
	}
	if(m%10==0)printf("\n");//m累计到10的倍数，换行。
    }
    printf("\n");
    return 0;
}
例11：译密码，为使电文保密，往往按一定规律将其转化为密码，收报人在按一定规律将其译回原文，例如：将字母A转化为E,a转化为e,W变成A,X变成B,...
      输入China!转化为Glame!,键盘输入一行字符，要求输出对应的密码。
#include<stdio.h>
#include<math.h>
int main(){
    char c;
    c=getchar();
    while(c!='\n'){ 	// 检测c是否有换行符
	if((c>='a' && c<='z')||(c>='A'&&c<='Z')){ // 判断输入的是字母
	    if(c>"W" && c<='Z'|| c>='w' && c<='z')c = c-22; //如果值最后4个字母就-22
	    else c+=4;				// 正常字母就加4
	}
	printf("%c",c);
	c=getchar();		// 在输入下一个字母
    }
    printf("\n");
    return 0;
}
二、课后习题：
3、输入两个正整数m和n，求其最大公约数和最小公倍数。
#include<stdio.h>
#include<math.h>
int main(){
    /*
     * 思路：
     * 	最小公倍数:将输入的两个数进行大小位置的互换，然后他们的最小公倍数就是她们之和，然后对m进行判断，此时m是较大的数，
     * 	最大公约数:
     */
    int p,r,n,m,temp;
    scanf("%d,%d",&n,&m);
    // 最大公约数
    //对输入的两个数从小到大进行位置互换
    if(n<m){
	temp=n;
	n=m;
	m=temp;
    }
    p=n*m; // 最大公约数为两个数相乘
    // 最小公倍数
    while(m!=0){  //对较小的数进行处理， m最终等于大的数整除小的数，n=较小的数，
	r=n%m;
	n=m;
	m=r;
    }
    printf("最大公约数%d",n);  
    printf("最小公倍数%d",p/n);
    return 0;
}














