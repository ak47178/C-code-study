一、例题：
例1：求1+2+3+4...+100.
方案一：使用while语句。
#include<stdio.h>
int main(){
    int sum=0;
    int i=1;
    while(i<=100){
	sum+=i;
	i++;
    }
    printf("sum:%d",sum);
    return 0;
}
方案二：使用do...while语句。
#include<stdio.h>
int main(){
    int sum=0;
    int i=1;
    do{
	sum+=i;
	i++;
    }while(i<=100);
    printf("sum:%d",sum);
    return 0;
}
例2：while 和do...while循环的比较。
(1)用while循环：
#include<stdio.h>
int main(){
    int sum=0,i=1;
    printf("please enter i,i=?\n");
    scanf("%d",&i);
    while(i<=10){
	sum+=i;
	i++;
    }
    printf("sum=%d",sum);
    return 0;
}
(2)使用do...while()循环：
#include<stdio.h>
int main(){
    int sum=0,i=1;
    printf("please enter i,i=?\n");
    scanf("%d",&i);
    do{
	sum+=i;
	i++;
    }while(i<=10);
    printf("sum=%d",sum);
    return 0;
}
例4：在全系1000学生中，征集慈善募捐，当总数达到10万元时就就结束，统计此时的捐款人数，以及平均每人的捐款人数。
#include<stdio.h>
#define SUM 100000
int main(){
    float total,amount,aver;
    int i;
    for(i=1,total=0;i<1000;i++){
	printf("please enter your count:");
	scanf("%f",&amount);
	total+=amount;
	if (total>=SUM) break;
    }
    aver = total/i;
    printf("num=%d\n aver=%0.2f\n",i,aver);
    return 0;
}
例5：要求输出100-200之间不能被3整除的数。
#include<stdio.h>
int main(){
    int i;
    for(i=100;i<200;i++){
	if(i%3==0){
	    continue;
	}
	printf("%d\n",i);
    }
    return 0;
}
例6：输出4*5的矩阵。
#include<stdio.h>
int main(){
    int i,j;
    for(i=1;i<=4;i++){
      for(j=1;j<=5;j++){
          printf("%d\t",i*j);
      }
	    printf("\n");
    }
    return 0;
}
#include<stdio.h>
int main(){
    int i,j;
    for(i=1;i<=4;i++){
      for(j=1;j<=5;j++){
          if(i==3&&j==1)break; // 遇到第3行和第1列，终止循环。
          printf("%d\t",i*j);
      }
	  printf("\n");
    }
    return 0;
}
例7：用pi/4=1-1/3+1/5-1/7+....公式求pi的近似值，直到发现每一项的绝对值小于10^6为止。
#include<stdio.h>
#include<math.h>
int main(){
    float pi=0;
    double y=1,tems=1.0;
    int sign=1;
    while(fabs(tems)>=1e-6){  // fabs():返回该数的绝对值。
	pi+=tems;
	y+=2;			//分母每次加二
	sign=-sign;		// 赋值之后再次赋值正好为正数，依次循环
	tems=sign/y;
    }
    pi*=4;
    printf("pi=%10.8f\n",pi);
    return 0;
}
例8：求fibonacci数列的前40个数，这个数列有以下特点，第1,2个数为1，第3个数开始，该数是前面两个数之和。
1.
#include<stdio.h>
#include<math.h>
int main(){
    int num1=1,num2=1,num3=1;
    for(int i=1;i<40;i++){
	if(i>2){
	    num3=num1+num2;
	}
	printf("%d\n",num3);
	num1=num2;
	num2=num3;
    }

    return 0;
}
例9：输入一个大于3的整数n,判定他是否为素数（质数）
#include<stdio.h>
#include<math.h>
int main(){
    /*
     * 只需判断是否能够被2-根号n之间的整数整除即可，
     */
    int n,k,i;
    scanf("%d",&n);
    k=sqrt(n);
    for(i=2;i<=k;i++){
	    if(n%i==0)break;
    }
    if(i<=k)printf("是质数%d",n);
    else printf("不是质数%d",n);
    return 0;
}

















